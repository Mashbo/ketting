{"version":3,"sources":["webpack://Ketting/webpack/bootstrap","webpack://Ketting/./src/utils/url.web.ts","webpack://Ketting/./src/link.ts","webpack://Ketting/./node_modules/querystring-es3/index.js","webpack://Ketting/./src/ketting.ts","webpack://Ketting/./src/representor/base.ts","webpack://Ketting/./src/resource.ts","webpack://Ketting/(webpack)/buildin/global.js","webpack://Ketting/./src/utils/fetch-helper.ts","webpack://Ketting/./src/index.ts","webpack://Ketting/./src/representor/hal.ts","webpack://Ketting/./node_modules/uri-template/index.js","webpack://Ketting/./node_modules/uri-template/lib/classes.js","webpack://Ketting/./node_modules/uri-template/lib/encoders.js","webpack://Ketting/./node_modules/pct-encode/index.js","webpack://Ketting/./src/representor/html.web.ts","webpack://Ketting/./node_modules/http-link-header/lib/link.js","webpack://Ketting/./node_modules/buffer/index.js","webpack://Ketting/./node_modules/base64-js/index.js","webpack://Ketting/./node_modules/ieee754/index.js","webpack://Ketting/./node_modules/isarray/index.js","webpack://Ketting/./node_modules/querystring-es3/decode.js","webpack://Ketting/./node_modules/querystring-es3/encode.js","webpack://Ketting/./node_modules/http-link-header/lib/trim.js","webpack://Ketting/./src/followable-promise.ts","webpack://Ketting/./src/http-error.ts","webpack://Ketting/./src/utils/base64.web.ts","webpack://Ketting/./src/utils/oauth.ts","webpack://Ketting/./node_modules/client-oauth2/src/client-oauth2.js","webpack://Ketting/./node_modules/url/url.js","webpack://Ketting/./node_modules/punycode/punycode.js","webpack://Ketting/(webpack)/buildin/module.js","webpack://Ketting/./node_modules/url/util.js","webpack://Ketting/./node_modules/client-oauth2/src/request/browser.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","resolve","base","relative","URL","toString","doc","document","oldBase","getElementsByTagName","oldHref","href","docHead","head","ourBase","appendChild","createElement","resolver","resolvedUrl","removeChild","uri_template_1","__importDefault","url_1","default","[object Object]","properties","this","templated","title","type","baseHref","variables","expanded","parse","expand","decode","encode","stringify","hal_1","html_1","resource_1","base64","__importStar","fetchHelper","oauth_1","bookMark","options","resourceCache","contentTypes","mime","representor","q","auth","oauth2Helper","OAuth2Helper","fetchInit","rel","getResource","follow","uri","skipCache","input","init","request","createFetchRequest","headers","has","set","version","userName","password","token","fetch","contentType","indexOf","split","trim","result","find","item","Error","map","join","body","links","embedded","http_link_header_1","followable_promise_1","http_error_1","link_1","fetch_helper_1","client","inFlightRefresh","repr","representation","params","method","JSON","Content-Type","Accept","getAcceptHeader","fetchAndThrow","response","then","result1","text","result2","getRepresentor","httpLinkHeader","httpLink","refs","push","keys","filter","async","res","rej","length","resource","reason","link","refresh","newInit","undefined","Request","url","Headers","credentials","cache","redirect","referrer","integrity","TypeError","mergeHeaders","ok","g","Function","eval","e","window","headerSets","headerSet","index","defaultInit","trueInit","assign","ketting_1","ketting_2","Ketting","Resource","base_1","super","_links","parseHalLinks","_embedded","parseHalEmbedded","relType","Array","isArray","parseHalLink","embeddedItem","self","quote","replace","escape","startRule","parseFunctions","uriTemplate","result0","pos0","pos","parse_nonexpression","parse_expression","offset","pieces","Template","expression","op","parse_op","pathExpression","substr","reportFailures","matchFailed","paramList","parse_paramList","param","parse_param","cut","parse_cut","listMarker","parse_listMarker","parse_substr","nonexpression","extension","parse_extension","rightmostFailuresPos","rightmostFailuresExpected","failure","result3","pos1","charCodeAt","test","charAt","pos2","pos3","hd","rst","unshift","chars","clm","explode","extended","digits","parseInt","cls","Math","max","found","errorPosition","line","column","seenCR","ch","computeErrorPosition","SyntaxError","expected","sort","lastExpected","cleanExpected","cleanupExpected","toSource","_source","message","expectedHumanized","slice","buildMessage","FormContinuationExpression","FormStartExpression","FragmentExpression","LabelExpression","NamedExpression","PathParamExpression","PathSegmentExpression","ReservedExpression","SimpleExpression","encoders","__bind","fn","me","apply","arguments","__hasProp","__extends","child","parent","ctor","constructor","__super__","_this","expressions","prefix","shift","forEach","suffix","vars","expr","toJSON","definedPairs","explodeObject","explodeArray","_expandPair","stringifySingle","first","sep","named","empty","allow","string","k","v","substring","_results","defined","pair","array","pairs","vv","_i","_len","_super","pctEncode","regexp","String","encoded","toUpperCase","linkFromTags","htmlDoc","elements","node","rels","getAttribute","DOMParser","parseFromString","Buffer","querystring","Link","pattern","attrPattern","isCompatibleEncoding","formatExtendedAttribute","attr","data","encoding","language","isBuffer","formatAttribute","parseExtendedValue","parts","exec","toLowerCase","unescape","setAttr","parseParams","kvs","parseAttrs","match","attrs","uriAttrs","ref","reduce","global","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","from","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","obj","len","checked","copy","buffer","val","isnan","fromObject","assertSize","size","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","j","hexWrite","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","tripletToBase64","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","log","LN2","prop","qs","eq","maxKeys","kstr","vstr","idx","decodeURIComponent","xs","stringifyPrimitive","objectKeys","ks","encodeURIComponent","f","FollowablePromise","executor","realPromise","Promise","onResolve","onReject","catch","reject","err","followAll","HttpError","status","Problem","problemBody","json","btoa","client_oauth2_1","owner","getToken","accessToken","refreshToken","Querystring","Url","defaultRequest","ClientOAuth2","DEFAULT_HEADERS","ERROR_RESPONSES","invalid_request","invalid_client","invalid_grant","unauthorized_client","unsupported_grant_type","access_denied","unsupported_response_type","invalid_scope","server_error","temporarily_unavailable","expects","getAuthError","error","error_description","sanitizeScope","scopes","createUri","tokenType","authorizationUri","client_id","clientId","redirect_uri","redirectUri","scope","response_type","state","query","username","requestOptions","CodeFlow","TokenFlow","OwnerFlow","CredentialsFlow","jwt","JwtBearerFlow","ClientOAuth2Token","token_type","access_token","refresh_token","expiresIn","expires_in","Token","createToken","access","_request","parseResponseBody","authErr","statusErr","duration","expires","Date","setSeconds","getSeconds","getTime","sign","requestObject","Authorization","fragment","Pragma","opts","accessTokenUri","clientSecret","grant_type","expired","now","getUri","expectedUrl","pathname","hash","search","assertion","punycode","util","protocol","slashes","host","port","hostname","path","urlParse","source","resolveObject","format","isString","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","parseQueryString","slashesDenoteHost","isObject","u","queryIndex","splitter","uSplit","rest","simplePath","proto","lowerProto","atSign","hostEnd","hec","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","toASCII","h","ae","esc","qm","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","isNullOrUndefined","authInHost","isNull","last","hasTrailingSlash","up","splice","isAbsolute","__WEBPACK_AMD_DEFINE_RESULT__","root","nodeType","freeGlobal","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","stringFromCharCode","mapDomain","ucs2decode","extra","counter","ucs2encode","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","basic","oldi","w","baseMinusT","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","toUnicode","webpackPolyfill","deprecate","paths","children","xhr","XMLHttpRequest","open","onload","responseText","onerror","onabort","statusText","header","setRequestHeader","send"],"mappings":"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","file":"ketting.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n * Resolves a relative url using another url.\n *\n * This is the browser-based version.\n */\nexport function resolve(base: string, relative: string): string {\n\n  // If the URL object is supported, we prefer that.\n  if (typeof URL !== 'undefined') {\n    return (new URL(relative, base).toString());\n  }\n\n  // Code taken from this gist:;\n  // https://gist.github.com/johan/3915545#file-resolveurl-js\n\n  const doc     = document;\n  const oldBase = doc.getElementsByTagName('base')[0];\n  const oldHref = oldBase && oldBase.href;\n  const docHead = doc.head || doc.getElementsByTagName('head')[0];\n  const ourBase = oldBase || docHead.appendChild(doc.createElement('base'));\n  const resolver = doc.createElement('a');\n\n  ourBase.href = base;\n  resolver.href = relative;\n  const resolvedUrl  = resolver.href; // browser magic at work here\n\n  if (oldBase) {\n    oldBase.href = oldHref;\n  } else {\n    docHead.removeChild(ourBase);\n  }\n  return resolvedUrl;\n\n}\n","import uriTemplate from 'uri-template';\nimport { resolve } from './utils/url';\n\ntype LinkInit = {\n  baseHref: string,\n  href: string,\n  name?: string,\n  rel: string,\n  templated?: boolean,\n  title?: string,\n  type?: string,\n};\n\n/**\n * The Link object represents a hyperlink.\n */\nexport default class Link {\n\n  /**\n   * The base href of the parent document. Used for expanding relative links.\n   */\n  baseHref: string;\n\n  /**\n   * The URI of the link. Might be relative\n   */\n  href: string;\n\n  /**\n   * The name for a link. This might be used to disambiguate the link.\n   *\n   * If you're looking at this, chances are that you might want 'title'\n   * instead.\n   */\n  name?: string;\n\n  /**\n   * The relationship type\n   */\n  rel: string;\n\n  /**\n   * Is it a URI template or not?\n   */\n  templated: boolean;\n\n  /**\n   * A human-readable label for the link.\n   */\n  title: string | null;\n\n  /**\n   * A mimetype\n   */\n  type: string | null;\n\n  constructor(properties: LinkInit) {\n\n    this.templated = false;\n    this.title = null;\n    this.type = null;\n    for (const key of ['baseHref', 'href', 'name', 'rel', 'templated', 'title', 'type']) {\n      if ((<any> properties)[key]) {\n        (<any> this)[key] = (<any> properties)[key];\n      }\n    }\n\n  }\n\n\n  /**\n   * Returns the absolute link url, based on it's base and relative url.\n   */\n  resolve(): string {\n\n    return resolve(this.baseHref, this.href);\n\n  }\n\n  /**\n   * Expands a link template (RFC6570) and resolves the uri\n   *\n   * @param {object} variables - A list of variables to expand the link with.\n   * @returns {string}\n   */\n  expand(variables: object): string {\n\n    if (!this.templated) {\n      return resolve(this.baseHref, this.href);\n    } else {\n      const templ = uriTemplate.parse(this.href);\n      const expanded = templ.expand(variables);\n      return resolve(this.baseHref, expanded);\n    }\n\n  }\n\n}\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","import FollowablePromise from './followable-promise';\nimport Representor from './representor/base';\nimport HalRepresentor from './representor/hal';\nimport HtmlRepresentor from './representor/html';\nimport Resource from './resource';\nimport * as base64 from './utils/base64';\nimport * as fetchHelper from './utils/fetch-helper';\nimport './utils/fetch-polyfill';\nimport { OAuth2Helper, OAuth2Init } from './utils/oauth';\nimport { resolve } from './utils/url';\n\ntype ContentType = {\n  mime: string,\n  representor: string,\n  q?: string\n};\n\ntype AuthOptionsBasic = {\n  type: 'basic'\n  password: string\n  userName: string\n};\ntype AuthOptionsBearer = {\n  type: 'bearer'\n  token: string\n};\ntype AuthOptionsOAuth2 = {\n  type: 'oauth2',\n} & OAuth2Init;\n\ntype AuthOptions =\n  AuthOptionsBasic |\n  AuthOptionsBearer |\n  AuthOptionsOAuth2;\n\ntype KettingOptions = {\n  auth?: AuthOptions\n  fetchInit?: RequestInit\n};\n\n\n/**\n * The main Ketting client object.\n */\nexport default class Ketting {\n\n  /**\n   * The url from which all discovery starts.\n   */\n  bookMark: string;\n\n  /**\n   * Here we store all the resources that were ever requested. This will\n   * ensure that if the same resource is requested twice, the same object is\n   * returned.\n   */\n  resourceCache: { [url: string]: Resource };\n\n  /**\n   * Autentication settings.\n   *\n   * If set, must have at least a `type` property.\n   * If type=basic, userName and password must be set.\n   */\n  auth: AuthOptions;\n\n  /**\n   * Content-Type settings and mappings.\n   *\n   * See the constructor for an example of the structure.\n   */\n  contentTypes: ContentType[];\n\n  /**\n   * A list of settings passed to the Fetch API.\n   *\n   * It's effectively a list of defaults that are passed as the 'init' argument.\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n   */\n  fetchInit: RequestInit;\n\n  /**\n   * If OAuth2 was configured, this property gives access to OAuth2-related\n   * operations.\n   */\n  oauth2Helper: OAuth2Helper;\n\n  constructor(bookMark: string, options?: KettingOptions) {\n\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n    this.resourceCache = {};\n\n    this.contentTypes = [\n      {\n        mime: 'application/hal+json',\n        representor: 'hal',\n        q: '1.0',\n      },\n      {\n        mime: 'application/json',\n        representor: 'hal',\n        q: '0.9',\n      },\n      {\n        mime: 'text/html',\n        representor: 'html',\n        q: '0.8',\n      }\n    ];\n\n    if (options.auth) {\n      this.auth = options.auth;\n\n      if (options.auth.type === 'oauth2') {\n        this.oauth2Helper = new OAuth2Helper(\n          options.auth\n        );\n      }\n    }\n\n    if (options.fetchInit) {\n      this.fetchInit = options.fetchInit;\n    }\n\n    this.bookMark = bookMark;\n\n  }\n\n\n  /**\n   * This function is a shortcut for getResource().follow(x);\n   */\n  follow(rel: string, variables?: object): FollowablePromise {\n\n    return this.getResource().follow(rel, variables);\n\n  }\n\n  /**\n   * Returns a resource by its uri.\n   *\n   * This function doesn't do any HTTP requests. The uri is optional. If it's\n   * not specified, it will return the bookmark resource.\n   */\n  getResource(uri?: string, skipCache?: boolean): Resource {\n\n    if (typeof uri === 'undefined') {\n      uri = '';\n    }\n    uri = resolve(this.bookMark, uri);\n    \n    if (typeof uri === 'undefined') {\n      skipCache = false;\n    }\n    \n    if (!this.resourceCache[uri] || skipCache) {\n      this.resourceCache[uri] = new Resource(this, uri);\n    }\n\n    return this.resourceCache[uri];\n\n  }\n\n  /**\n   * This function does an arbitrary request using the fetch API.\n   *\n   * Every request in ketting is routed through here so it can be initialized\n   * with some useful defaults.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch}\n   */\n  fetch(input: string|Request, init?: RequestInit): Promise<Response> {\n\n    const request = fetchHelper.createFetchRequest(input, init, this.fetchInit);\n\n    if (!request.headers.has('User-Agent')) {\n      request.headers.set('User-Agent', 'Ketting/' + require('../package.json').version);\n    }\n    if (!request.headers.has('Authorization') && this.auth) {\n      switch (this.auth.type) {\n\n        case 'basic' :\n          request.headers.set('Authorization', 'Basic ' + base64.encode(this.auth.userName + ':' + this.auth.password));\n          break;\n        case 'bearer' :\n          request.headers.set('Authorization', 'Bearer ' + this.auth.token);\n          break;\n        case 'oauth2' :\n          return this.oauth2Helper.fetch(request);\n      }\n\n    }\n\n    return fetch(request);\n\n  }\n\n  /**\n   * This function returns a representor constructor for a mime type.\n   *\n   * For example, given text/html, this function might return the constructor\n   * stored in representor/html.\n   */\n  getRepresentor(contentType: string): typeof Representor {\n\n    if (contentType.indexOf(';') !== -1) {\n      contentType = contentType.split(';')[0];\n    }\n    contentType = contentType.trim();\n    const result = this.contentTypes.find(item => {\n      return item.mime === contentType;\n    });\n\n    if (!result) {\n      throw new Error('Could not find a representor for contentType: ' + contentType);\n    }\n\n    switch (result.representor) {\n    case 'html' :\n      return HtmlRepresentor;\n    case 'hal' :\n      return HalRepresentor;\n    default :\n      throw new Error('Unknown representor: ' + result.representor);\n\n    }\n\n  }\n\n\n  /**\n   * Generates an accept header string, based on registered Resource Types.\n   */\n  getAcceptHeader(): string {\n\n    return this.contentTypes\n      .map( contentType => {\n        let item = contentType.mime;\n        if (contentType.q) { item += ';q=' + contentType.q; }\n        return item;\n      } )\n      .join(', ');\n\n  }\n\n}\n","import Link from '../link';\n\n\n/**\n * The Representation class is basically a 'body' of a request\n * or response.\n *\n * This is base class for a representation.\n */\nexport default class Representation {\n\n  body: any;\n  contentType: string;\n  embedded: {\n    [uri: string]: object\n  };\n  links: Link[];\n  uri: string;\n\n  constructor(uri: string, contentType: string, body: any) {\n\n    this.uri = uri;\n    this.contentType = contentType;\n    this.body = body;\n    this.links = [];\n    this.embedded = {};\n\n  }\n\n}\n","import LinkHeader from 'http-link-header';\nimport FollowablePromise from './followable-promise';\nimport problemFactory from './http-error';\nimport Ketting from './ketting';\nimport Link from './link';\nimport Representation from './representor/base';\nimport { mergeHeaders } from './utils/fetch-helper';\nimport { resolve } from './utils/url';\n\n/**\n * A 'resource' represents an endpoint on the server.\n *\n * The endpoint has a uri, you might for example be able to GET its\n * presentation.\n *\n * A resource may also have a list of links on them, pointing to other\n * resources.\n *\n * @param {Client} client\n * @param {string} uri\n * @constructor\n */\nexport default class Resource<T = any> {\n\n  /**\n   * Reference to the main Client\n   */\n  client: Ketting;\n\n  /**\n   * The current representation, or body of the resource.\n   */\n  repr: Representation | null;\n\n  /**\n   * The uri of the resource\n   */\n  uri: string;\n\n  /**\n   * A default mimetype for the resource.\n   *\n   * This mimetype is used for PUT and POST requests by default.\n   * The mimetype is sniffed in a few different ways.\n   *\n   * If a GET request is done, and the GET request had a mimetype it will\n   * be used to set this value.\n   *\n   * It's also possible for resources to get a mimetype through a link.\n   *\n   * If the mimetype was \"null\" when doing the request, the chosen mimetype\n   * will come from the first item in Client.resourceTypes\n   */\n  contentType: string | null;\n\n  private inFlightRefresh: Promise<any> = null;\n\n  constructor(client: Ketting, uri: string, contentType: string = null) {\n\n    this.client = client;\n    this.uri = uri;\n    this.repr = null;\n    this.contentType = contentType;\n\n  }\n\n  /**\n   * Fetches the resource representation.\n   * Returns a promise that resolves to a parsed json object.\n   */\n  async get(): Promise<T> {\n\n    const r = await this.representation();\n    return r.body;\n\n  }\n\n  /**\n   * Updates the resource representation with a new JSON object.\n   */\n  async put(body: T): Promise<void> {\n\n    const contentType = this.contentType || this.client.contentTypes[0].mime;\n    const params = {\n      method: 'PUT',\n      body: JSON.stringify(body),\n      headers: {\n        'Content-Type': contentType,\n        'Accept' : this.contentType ? this.contentType : this.client.getAcceptHeader()\n      }\n    };\n    await this.fetchAndThrow(params);\n\n    // Wipe out the local cache\n    this.repr = null;\n\n  }\n\n  /**\n   * Updates the resource representation with a new JSON object.\n   */\n  async delete(): Promise<void> {\n\n    await this.fetchAndThrow({ method: 'DELETE' });\n\n    // Wipe out the local cache\n    this.repr = null;\n\n  }\n\n  /**\n   * Sends a POST request to the resource.\n   *\n   * This function assumes that POST is used to create new resources, and\n   * that the response will be a 201 Created along with a Location header that\n   * identifies the new resource location.\n   *\n   * This function returns a Promise that resolves into the newly created\n   * Resource.\n   *\n   * If no Location header was given, it will resolve still, but with an empty\n   * value.\n   */\n  async post(body: object): Promise<Resource|null> {\n\n    const contentType = this.contentType || this.client.contentTypes[0].mime;\n    const response = await this.fetchAndThrow(\n      {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': contentType,\n        }\n      }\n    );\n\n    if (response.headers.has('location')) {\n      return this.client.getResource(\n        resolve(\n          this.uri,\n          <string> response.headers.get('location')\n        )\n      );\n    }\n    return null;\n\n  }\n\n  /**\n   * Sends a PATCH request to the resource.\n   *\n   * This function defaults to a application/json content-type header.\n   */\n  async patch(body: object): Promise<void> {\n\n    await this.fetchAndThrow(\n      {\n        method: 'PATCH',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      }\n    );\n\n    // Wipe out the local cache\n    this.repr = null;\n\n  }\n\n  /**\n   * Refreshes the representation for this resource.\n   *\n   * This function will return the a parsed JSON object, like the get\n   * function does.\n   *\n   * @return {object}\n   */\n  async refresh(): Promise<T> {\n\n    let response: Response;\n    let body: string;\n\n    // If 2 systems request a 'refresh' at the exact same time, this mechanism\n    // will coalesc them into one.\n    if (!this.inFlightRefresh) {\n\n      this.inFlightRefresh = this.fetchAndThrow({\n        method: 'GET' ,\n        headers: {\n          Accept: this.contentType ? this.contentType : this.client.getAcceptHeader()\n        }\n      }).then( result1 => {\n        response = result1;\n        return response.text();\n      })\n      .then( result2 => {\n        body = result2;\n        return [response, body];\n      });\n\n      await this.inFlightRefresh;\n      this.inFlightRefresh = null;\n\n    } else {\n      // Something else asked for refresh, so we piggypack on it.\n      [response, body] = await this.inFlightRefresh;\n\n    }\n\n    const contentType = response.headers.get('Content-Type');\n    if (!contentType) {\n      throw new Error('Server did not respond with a Content-Type header');\n    }\n    this.repr = new (this.client.getRepresentor(contentType))(\n       this.uri,\n       contentType,\n       body\n    );\n\n    if (!this.contentType) {\n      this.contentType = contentType;\n    }\n\n    // Extracting HTTP Link header.\n    const httpLinkHeader = response.headers.get('Link');\n    if (httpLinkHeader) {\n\n      for (const httpLink of LinkHeader.parse(httpLinkHeader).refs) {\n        // Looping through individual links\n         for (const rel of httpLink.rel.split(' ')) {\n           // Looping through space separated rel values.\n           this.repr.links.push(\n              new Link({\n                rel: rel,\n                baseHref: this.uri,\n                href: httpLink.uri\n              })\n           );\n         }\n      }\n\n    }\n\n    // Parsing and storing embedded uris\n    for (const uri of Object.keys(this.repr.embedded)) {\n      const subResource = this.client.getResource(uri);\n      subResource.repr = new (this.client.getRepresentor(contentType))(\n        uri,\n        contentType,\n        this.repr.embedded[uri]\n      );\n    }\n\n    return this.repr.body;\n\n  }\n\n  /**\n   * Returns the links for this resource, as a promise.\n   *\n   * The rel argument is optional. If it's given, we will only return links\n   * from that relationship type.\n   */\n  async links(rel?: string): Promise<Link[]> {\n\n    const r = await this.representation();\n\n    if (!rel) { return r.links; }\n\n    return r.links.filter( item => item.rel === rel );\n\n  }\n\n  /**\n   * Follows a relationship, based on its reltype. For example, this might be\n   * 'alternate', 'item', 'edit' or a custom url-based one.\n   *\n   * This function can also follow templated uris. You can specify uri\n   * variables in the optional variables argument.\n   */\n  follow(rel: string, variables?: object): FollowablePromise {\n\n    return new FollowablePromise(async (res: any, rej: any) => {\n\n      try {\n        const links = await this.links(rel);\n\n        let href;\n        if (links.length === 0) {\n          throw new Error('Relation with type ' + rel + ' not found on resource ' + this.uri);\n        }\n        if (links[0].templated && variables) {\n          href = links[0].expand(variables);\n        } else {\n          href = links[0].resolve();\n        }\n\n        const resource = this.client.getResource(\n          href\n        );\n        if (links[0].type) {\n          resource.contentType = links[0].type;\n        }\n\n        res(resource);\n\n      } catch (reason) {\n        rej(reason);\n      }\n\n    });\n\n  }\n\n  /**\n   * Follows a relationship based on its reltype. This function returns a\n   * Promise that resolves to an array of Resource objects.\n   *\n   * If no resources were found, the array will be empty.\n   */\n  async followAll(rel: string): Promise<Resource[]> {\n\n    const links = await this.links(rel);\n\n    return links.map((link: Link) => {\n      const resource = this.client.getResource(\n        link.resolve()\n      );\n      if (link.type) {\n        resource.contentType = link.type;\n      }\n      return resource;\n    });\n\n  }\n\n  /**\n   * Returns the representation for the object.\n   * If it wasn't fetched yet, this function does the fetch as well.\n   *\n   * Usually you will want to use the `get()` method instead, unless you need\n   * the full object.\n   */\n  async representation(): Promise<Representation> {\n\n    if (!this.repr) {\n      await this.refresh();\n    }\n\n    return <Representation> this.repr;\n\n  }\n\n  /**\n   * Does an arbitrary HTTP request on the resource using the Fetch API.\n   *\n   * The method signature is the same as the MDN fetch object. However, it's\n   * possible in this case to not specify a URI or specify a relative URI.\n   *\n   * When doing the actual request, any relative uri will be resolved to the\n   * uri of the current resource.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n   */\n  fetch(input: Request|string|RequestInit, init?: RequestInit): Promise<Response> {\n\n    let uri = null;\n    let newInit: RequestInit = {};\n\n    if (input === undefined) {\n      // Nothing was provided, we're operating on the resource uri.\n      uri = this.uri;\n    } else if (typeof input === 'string') {\n      // If it's a string, it might be relative uri so we're resolving it\n      // first.\n      uri = resolve(this.uri, input);\n\n    } else if (input instanceof Request) {\n      // We were passed a request object. We need to extract all its\n      // information into the init object.\n      uri = resolve(this.uri, (<Request> input).url);\n\n      newInit.method = input.method;\n      newInit.headers = new Headers(input.headers);\n      // @ts-ignore: Possibly an error due to https://github.com/Microsoft/TypeScript/issues/15199\n      newInit.body = input.body;\n      newInit.mode = input.mode;\n      newInit.credentials = input.credentials;\n      newInit.cache = input.cache;\n      newInit.redirect = input.redirect;\n      newInit.referrer = input.referrer;\n      newInit.integrity = input.integrity;\n\n    } else if (input instanceof Object) {\n      // if it was a regular 'object', but not a Request, we're assuming the\n      // method was called with the init object as it's first parameter. This\n      // is not allowed in the default Fetch API, but we do allow it because\n      // in the resource, specifying the uri is optional.\n      uri = this.uri;\n      newInit = <RequestInit> input;\n    } else {\n      throw new TypeError('When specified, input must be a string, Request object or a key-value object');\n    }\n\n    // if the 'init' argument is specified, we're using it to override things\n    // in newInit.\n    if (init) {\n\n      for (const key of Object.keys(init)) {\n        if (key === 'headers') {\n          // special case.\n          continue;\n        }\n        (<any> newInit)[key] = (<any> init)[key];\n      }\n      newInit.headers = mergeHeaders([\n        newInit.headers,\n        init.headers\n      ]);\n    }\n\n    // @ts-ignore cross-fetch definitions are broken. See https://github.com/lquixada/cross-fetch/pull/19\n    const request = new Request(uri, newInit);\n\n    return this.client.fetch(request);\n\n  }\n\n  /**\n   * Does a HTTP request and throws an exception if the server emitted\n   * a HTTP error.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n   */\n  async fetchAndThrow(input: Request|string|object, init?: object): Promise<Response> {\n\n    const response = await this.fetch(input, init);\n\n    if (response.ok) {\n      return response;\n    } else {\n      throw await problemFactory(response);\n    }\n\n  }\n\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import './fetch-polyfill';\n\n/**\n * Creates a Fetch Request object, based on a number of settings.\n *\n * @param {string|Request} input - Url or input request object.\n * @param {object} init - A list of Fetch settings\n * @param {object} defaultInit - A list of default settings to use if they\n *                              weren't overridden by init.\n * @return {Response}\n */\nexport function createFetchRequest(input: any, init: any, defaultInit: any): Request {\n\n  const trueInit: any = {};\n\n  if (init) {\n    Object.assign(trueInit, defaultInit, init);\n  } else {\n    Object.assign(trueInit, defaultInit);\n  }\n\n  trueInit.headers = mergeHeaders([\n    defaultInit ? defaultInit.headers : null,\n    // @ts-ignore cross-fetch definitions are broken. See https://github.com/lquixada/cross-fetch/pull/19\n    input instanceof Request ? input.headers : null,\n    init && init.headers ? init.headers : null\n  ]);\n\n    // @ts-ignore cross-fetch definitions are broken. See https://github.com/lquixada/cross-fetch/pull/19\n  return new Request(input, trueInit);\n\n}\n\ntype HeaderSet = any;\n\n/**\n * Merges sets of HTTP headers.\n *\n * Each item in the array is a key->value object, a Fetch Headers object\n * or falsey.\n *\n * Any headers that appear more than once get replaced. The last occurence\n * wins.\n */\nexport function mergeHeaders(headerSets: HeaderSet[]): Headers {\n\n  const result = new Headers();\n  for (const headerSet of headerSets) {\n\n    if (headerSet instanceof Headers) {\n      for (const key of headerSet.keys()) {\n        result.set(key, <string> headerSet.get(key));\n      }\n    } else if (headerSet) {\n      // not falsey, must be a key->value object.\n      for (const index of Object.keys(headerSet)) {\n        result.set(index, headerSet[index]);\n      }\n    }\n  }\n\n  return result;\n\n}\n","export { default as default } from './ketting';\nexport { default as Ketting } from './ketting';\nexport { default as Resource } from './resource';\n","import Link from '../link';\nimport { resolve } from '../utils/url';\nimport Representation from './base';\n\n/**\n * The Representation class is basically a 'body' of a request\n * or response.\n *\n * This class is for HAL JSON responses.\n */\nexport default class Hal extends Representation {\n\n  body: { [s: string]: any };\n\n  constructor(uri: string, contentType: string, body: any) {\n\n    super(uri, contentType, body);\n\n    if (typeof body === 'string') {\n      this.body = JSON.parse(body);\n    } else {\n      this.body = body;\n    }\n\n    if (typeof this.body._links !== 'undefined') {\n      parseHalLinks(this);\n    }\n    if (typeof this.body._embedded !== 'undefined') {\n      parseHalEmbedded(this);\n    }\n\n    delete this.body._links;\n    delete this.body._embedded;\n\n  }\n\n}\n\n/**\n * Parse the Hal _links object and populate the 'links' property.\n */\nconst parseHalLinks = (representation: Hal): void => {\n\n  for (const relType of Object.keys((<any> representation.body)._links)) {\n\n    let links = (<any> representation.body)._links[relType];\n    if (!Array.isArray(links)) {\n      links = [links];\n    }\n    parseHalLink(representation, relType, links);\n\n  }\n\n};\n\ntype HalLink = {\n  href: string,\n  name?: string,\n  title: string,\n  templated?: boolean,\n  type?: string\n};\n\n/**\n * Parses a single HAL link from a _links object, or a list of links.\n */\nconst parseHalLink = (representation: Hal, rel: string, links: HalLink[]): void => {\n\n  for (const link of links) {\n    representation.links.push(\n      new Link({\n        rel: rel,\n        baseHref: representation.uri,\n        href: link.href,\n        title: link.title,\n        type: link.type,\n        templated: link.templated,\n        name: link.name\n      })\n    );\n  }\n\n};\n\n/**\n * Parse the HAL _embedded object. Right now we're just grabbing the\n * information from _embedded and turn it into links.\n */\nconst parseHalEmbedded = (representation: Hal): void => {\n\n  for (const relType of Object.keys((<any> representation).body._embedded)) {\n\n    let embedded = (<any> representation).body._embedded[relType];\n    if (!Array.isArray(embedded)) {\n      embedded = [embedded];\n    }\n    for (const embeddedItem of embedded) {\n\n      const uri = resolve(\n        representation.uri,\n        embeddedItem._links.self.href\n      );\n\n      // Only adding a link to the representation if it didn't already exist.\n      if (!representation.links.find( item => {\n        return item.rel === relType && embeddedItem._links.self.href === item.href;\n      })) {\n        representation.links.push(\n          new Link({\n            rel: relType,\n            baseHref: representation.uri,\n            href: embeddedItem._links.self.href\n          })\n        );\n      }\n\n      representation.embedded[uri] = embeddedItem;\n\n    }\n  }\n};\n","module.exports = (function(){\n  /*\n   * Generated by PEG.js 0.7.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n  \n  function quote(s) {\n    /*\n     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a\n     * string literal except for the closing quote character, backslash,\n     * carriage return, line separator, paragraph separator, and line feed.\n     * Any character may appear in the form of an escape sequence.\n     *\n     * For portability, we also escape escape all control and non-ASCII\n     * characters. Note that \"\\0\" and \"\\v\" escape sequences are not used\n     * because JSHint does not like the first and IE the second.\n     */\n     return '\"' + s\n      .replace(/\\\\/g, '\\\\\\\\')  // backslash\n      .replace(/\"/g, '\\\\\"')    // closing quote character\n      .replace(/\\x08/g, '\\\\b') // backspace\n      .replace(/\\t/g, '\\\\t')   // horizontal tab\n      .replace(/\\n/g, '\\\\n')   // line feed\n      .replace(/\\f/g, '\\\\f')   // form feed\n      .replace(/\\r/g, '\\\\r')   // carriage return\n      .replace(/[\\x00-\\x07\\x0B\\x0E-\\x1F\\x80-\\uFFFF]/g, escape)\n      + '\"';\n  }\n  \n  var result = {\n    /*\n     * Parses the input with a generated parser. If the parsing is successfull,\n     * returns a value explicitly or implicitly specified by the grammar from\n     * which the parser was generated (see |PEG.buildParser|). If the parsing is\n     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.\n     */\n    parse: function(input, startRule) {\n      var parseFunctions = {\n        \"uriTemplate\": parse_uriTemplate,\n        \"expression\": parse_expression,\n        \"op\": parse_op,\n        \"pathExpression\": parse_pathExpression,\n        \"paramList\": parse_paramList,\n        \"param\": parse_param,\n        \"cut\": parse_cut,\n        \"listMarker\": parse_listMarker,\n        \"substr\": parse_substr,\n        \"nonexpression\": parse_nonexpression,\n        \"extension\": parse_extension\n      };\n      \n      if (startRule !== undefined) {\n        if (parseFunctions[startRule] === undefined) {\n          throw new Error(\"Invalid rule name: \" + quote(startRule) + \".\");\n        }\n      } else {\n        startRule = \"uriTemplate\";\n      }\n      \n      var pos = 0;\n      var reportFailures = 0;\n      var rightmostFailuresPos = 0;\n      var rightmostFailuresExpected = [];\n      \n      function padLeft(input, padding, length) {\n        var result = input;\n        \n        var padLength = length - input.length;\n        for (var i = 0; i < padLength; i++) {\n          result = padding + result;\n        }\n        \n        return result;\n      }\n      \n      function escape(ch) {\n        var charCode = ch.charCodeAt(0);\n        var escapeChar;\n        var length;\n        \n        if (charCode <= 0xFF) {\n          escapeChar = 'x';\n          length = 2;\n        } else {\n          escapeChar = 'u';\n          length = 4;\n        }\n        \n        return '\\\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);\n      }\n      \n      function matchFailed(failure) {\n        if (pos < rightmostFailuresPos) {\n          return;\n        }\n        \n        if (pos > rightmostFailuresPos) {\n          rightmostFailuresPos = pos;\n          rightmostFailuresExpected = [];\n        }\n        \n        rightmostFailuresExpected.push(failure);\n      }\n      \n      function parse_uriTemplate() {\n        var result0, result1;\n        var pos0;\n        \n        pos0 = pos;\n        result0 = [];\n        result1 = parse_nonexpression();\n        if (result1 === null) {\n          result1 = parse_expression();\n        }\n        while (result1 !== null) {\n          result0.push(result1);\n          result1 = parse_nonexpression();\n          if (result1 === null) {\n            result1 = parse_expression();\n          }\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, pieces) { return new Template(pieces) })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_expression() {\n        var result0, result1, result2, result3;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 123) {\n          result0 = \"{\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"{\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse_op();\n          if (result1 !== null) {\n            result2 = parse_paramList();\n            if (result2 !== null) {\n              if (input.charCodeAt(pos) === 125) {\n                result3 = \"}\";\n                pos++;\n              } else {\n                result3 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"\\\"}\\\"\");\n                }\n              }\n              if (result3 !== null) {\n                result0 = [result0, result1, result2, result3];\n              } else {\n                result0 = null;\n                pos = pos1;\n              }\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, op, params) { return expression(op, params) })(pos0, result0[1], result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_op() {\n        var result0;\n        \n        if (/^[\\/;:.?&+#]/.test(input.charAt(pos))) {\n          result0 = input.charAt(pos);\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[\\\\/;:.?&+#]\");\n          }\n        }\n        if (result0 === null) {\n          result0 = \"\";\n        }\n        return result0;\n      }\n      \n      function parse_pathExpression() {\n        var result0;\n        \n        if (input.substr(pos, 2) === \"{/\") {\n          result0 = \"{/\";\n          pos += 2;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"{/\\\"\");\n          }\n        }\n        return result0;\n      }\n      \n      function parse_paramList() {\n        var result0, result1, result2, result3;\n        var pos0, pos1, pos2, pos3;\n        \n        pos0 = pos;\n        pos1 = pos;\n        result0 = parse_param();\n        if (result0 !== null) {\n          result1 = [];\n          pos2 = pos;\n          pos3 = pos;\n          if (input.charCodeAt(pos) === 44) {\n            result2 = \",\";\n            pos++;\n          } else {\n            result2 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"\\\",\\\"\");\n            }\n          }\n          if (result2 !== null) {\n            result3 = parse_param();\n            if (result3 !== null) {\n              result2 = [result2, result3];\n            } else {\n              result2 = null;\n              pos = pos3;\n            }\n          } else {\n            result2 = null;\n            pos = pos3;\n          }\n          if (result2 !== null) {\n            result2 = (function(offset, p) { return p; })(pos2, result2[1]);\n          }\n          if (result2 === null) {\n            pos = pos2;\n          }\n          while (result2 !== null) {\n            result1.push(result2);\n            pos2 = pos;\n            pos3 = pos;\n            if (input.charCodeAt(pos) === 44) {\n              result2 = \",\";\n              pos++;\n            } else {\n              result2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\",\\\"\");\n              }\n            }\n            if (result2 !== null) {\n              result3 = parse_param();\n              if (result3 !== null) {\n                result2 = [result2, result3];\n              } else {\n                result2 = null;\n                pos = pos3;\n              }\n            } else {\n              result2 = null;\n              pos = pos3;\n            }\n            if (result2 !== null) {\n              result2 = (function(offset, p) { return p; })(pos2, result2[1]);\n            }\n            if (result2 === null) {\n              pos = pos2;\n            }\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, hd, rst) { rst.unshift(hd); return rst; })(pos0, result0[0], result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_param() {\n        var result0, result1, result2;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        result0 = [];\n        if (/^[a-zA-Z0-9_.%]/.test(input.charAt(pos))) {\n          result1 = input.charAt(pos);\n          pos++;\n        } else {\n          result1 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[a-zA-Z0-9_.%]\");\n          }\n        }\n        while (result1 !== null) {\n          result0.push(result1);\n          if (/^[a-zA-Z0-9_.%]/.test(input.charAt(pos))) {\n            result1 = input.charAt(pos);\n            pos++;\n          } else {\n            result1 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[a-zA-Z0-9_.%]\");\n            }\n          }\n        }\n        if (result0 !== null) {\n          result1 = parse_cut();\n          if (result1 === null) {\n            result1 = parse_listMarker();\n          }\n          result1 = result1 !== null ? result1 : \"\";\n          if (result1 !== null) {\n            result2 = parse_extension();\n            result2 = result2 !== null ? result2 : \"\";\n            if (result2 !== null) {\n              result0 = [result0, result1, result2];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, chars, clm, e) { clm = clm || {};\n              return {\n              name: chars.join(''),\n              explode: clm.listMarker,\n              cut: clm.cut,\n              extended: e\n            } })(pos0, result0[0], result0[1], result0[2]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_cut() {\n        var result0;\n        var pos0;\n        \n        pos0 = pos;\n        result0 = parse_substr();\n        if (result0 !== null) {\n          result0 = (function(offset, cut) { return {cut: cut}; })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_listMarker() {\n        var result0;\n        var pos0;\n        \n        pos0 = pos;\n        if (input.charCodeAt(pos) === 42) {\n          result0 = \"*\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"*\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, listMarker) { return {listMarker: listMarker}; })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_substr() {\n        var result0, result1, result2;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 58) {\n          result0 = \":\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\":\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          if (/^[0-9]/.test(input.charAt(pos))) {\n            result2 = input.charAt(pos);\n            pos++;\n          } else {\n            result2 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[0-9]\");\n            }\n          }\n          if (result2 !== null) {\n            result1 = [];\n            while (result2 !== null) {\n              result1.push(result2);\n              if (/^[0-9]/.test(input.charAt(pos))) {\n                result2 = input.charAt(pos);\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[0-9]\");\n                }\n              }\n            }\n          } else {\n            result1 = null;\n          }\n          if (result1 !== null) {\n            result0 = [result0, result1];\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, digits) { return parseInt(digits.join('')) })(pos0, result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_nonexpression() {\n        var result0, result1;\n        var pos0;\n        \n        pos0 = pos;\n        if (/^[^{]/.test(input.charAt(pos))) {\n          result1 = input.charAt(pos);\n          pos++;\n        } else {\n          result1 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"[^{]\");\n          }\n        }\n        if (result1 !== null) {\n          result0 = [];\n          while (result1 !== null) {\n            result0.push(result1);\n            if (/^[^{]/.test(input.charAt(pos))) {\n              result1 = input.charAt(pos);\n              pos++;\n            } else {\n              result1 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"[^{]\");\n              }\n            }\n          }\n        } else {\n          result0 = null;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, chars) { return chars.join(''); })(pos0, result0);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      function parse_extension() {\n        var result0, result1, result2;\n        var pos0, pos1;\n        \n        pos0 = pos;\n        pos1 = pos;\n        if (input.charCodeAt(pos) === 40) {\n          result0 = \"(\";\n          pos++;\n        } else {\n          result0 = null;\n          if (reportFailures === 0) {\n            matchFailed(\"\\\"(\\\"\");\n          }\n        }\n        if (result0 !== null) {\n          if (/^[^)]/.test(input.charAt(pos))) {\n            result2 = input.charAt(pos);\n            pos++;\n          } else {\n            result2 = null;\n            if (reportFailures === 0) {\n              matchFailed(\"[^)]\");\n            }\n          }\n          if (result2 !== null) {\n            result1 = [];\n            while (result2 !== null) {\n              result1.push(result2);\n              if (/^[^)]/.test(input.charAt(pos))) {\n                result2 = input.charAt(pos);\n                pos++;\n              } else {\n                result2 = null;\n                if (reportFailures === 0) {\n                  matchFailed(\"[^)]\");\n                }\n              }\n            }\n          } else {\n            result1 = null;\n          }\n          if (result1 !== null) {\n            if (input.charCodeAt(pos) === 41) {\n              result2 = \")\";\n              pos++;\n            } else {\n              result2 = null;\n              if (reportFailures === 0) {\n                matchFailed(\"\\\")\\\"\");\n              }\n            }\n            if (result2 !== null) {\n              result0 = [result0, result1, result2];\n            } else {\n              result0 = null;\n              pos = pos1;\n            }\n          } else {\n            result0 = null;\n            pos = pos1;\n          }\n        } else {\n          result0 = null;\n          pos = pos1;\n        }\n        if (result0 !== null) {\n          result0 = (function(offset, chars) { return chars.join('') })(pos0, result0[1]);\n        }\n        if (result0 === null) {\n          pos = pos0;\n        }\n        return result0;\n      }\n      \n      \n      function cleanupExpected(expected) {\n        expected.sort();\n        \n        var lastExpected = null;\n        var cleanExpected = [];\n        for (var i = 0; i < expected.length; i++) {\n          if (expected[i] !== lastExpected) {\n            cleanExpected.push(expected[i]);\n            lastExpected = expected[i];\n          }\n        }\n        return cleanExpected;\n      }\n      \n      function computeErrorPosition() {\n        /*\n         * The first idea was to use |String.split| to break the input up to the\n         * error position along newlines and derive the line and column from\n         * there. However IE's |split| implementation is so broken that it was\n         * enough to prevent it.\n         */\n        \n        var line = 1;\n        var column = 1;\n        var seenCR = false;\n        \n        for (var i = 0; i < Math.max(pos, rightmostFailuresPos); i++) {\n          var ch = input.charAt(i);\n          if (ch === \"\\n\") {\n            if (!seenCR) { line++; }\n            column = 1;\n            seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            line++;\n            column = 1;\n            seenCR = true;\n          } else {\n            column++;\n            seenCR = false;\n          }\n        }\n        \n        return { line: line, column: column };\n      }\n      \n      \n          var cls = require('./lib/classes')\n          var Template = cls.Template\n          var expression = cls.expression\n      \n      \n      var result = parseFunctions[startRule]();\n      \n      /*\n       * The parser is now in one of the following three states:\n       *\n       * 1. The parser successfully parsed the whole input.\n       *\n       *    - |result !== null|\n       *    - |pos === input.length|\n       *    - |rightmostFailuresExpected| may or may not contain something\n       *\n       * 2. The parser successfully parsed only a part of the input.\n       *\n       *    - |result !== null|\n       *    - |pos < input.length|\n       *    - |rightmostFailuresExpected| may or may not contain something\n       *\n       * 3. The parser did not successfully parse any part of the input.\n       *\n       *   - |result === null|\n       *   - |pos === 0|\n       *   - |rightmostFailuresExpected| contains at least one failure\n       *\n       * All code following this comment (including called functions) must\n       * handle these states.\n       */\n      if (result === null || pos !== input.length) {\n        var offset = Math.max(pos, rightmostFailuresPos);\n        var found = offset < input.length ? input.charAt(offset) : null;\n        var errorPosition = computeErrorPosition();\n        \n        throw new this.SyntaxError(\n          cleanupExpected(rightmostFailuresExpected),\n          found,\n          offset,\n          errorPosition.line,\n          errorPosition.column\n        );\n      }\n      \n      return result;\n    },\n    \n    /* Returns the parser source code. */\n    toSource: function() { return this._source; }\n  };\n  \n  /* Thrown when a parser encounters a syntax error. */\n  \n  result.SyntaxError = function(expected, found, offset, line, column) {\n    function buildMessage(expected, found) {\n      var expectedHumanized, foundHumanized;\n      \n      switch (expected.length) {\n        case 0:\n          expectedHumanized = \"end of input\";\n          break;\n        case 1:\n          expectedHumanized = expected[0];\n          break;\n        default:\n          expectedHumanized = expected.slice(0, expected.length - 1).join(\", \")\n            + \" or \"\n            + expected[expected.length - 1];\n      }\n      \n      foundHumanized = found ? quote(found) : \"end of input\";\n      \n      return \"Expected \" + expectedHumanized + \" but \" + foundHumanized + \" found.\";\n    }\n    \n    this.name = \"SyntaxError\";\n    this.expected = expected;\n    this.found = found;\n    this.message = buildMessage(expected, found);\n    this.offset = offset;\n    this.line = line;\n    this.column = column;\n  };\n  \n  result.SyntaxError.prototype = Error.prototype;\n  \n  return result;\n})();\n","// Generated by CoffeeScript 1.6.3\n(function() {\n  var FormContinuationExpression, FormStartExpression, FragmentExpression, LabelExpression, NamedExpression, PathParamExpression, PathSegmentExpression, ReservedExpression, SimpleExpression, Template, encoders, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7,\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  encoders = require('./encoders');\n\n  Template = Template = (function() {\n    function Template(pieces) {\n      /*\n      :param pieces: An array of strings and expressions in the order they appear in the template.\n      */\n\n      var i,\n        _this = this;\n      this.expressions = [];\n      this.prefix = 'string' === typeof pieces[0] ? pieces.shift() : '';\n      i = 0;\n      pieces.forEach(function(p) {\n        switch (typeof p) {\n          case 'object':\n            return _this.expressions[i++] = p;\n          case 'string':\n            return _this.expressions[i - 1].suffix = p;\n        }\n      });\n    }\n\n    Template.prototype.expand = function(vars) {\n      return this.prefix + this.expressions.map(function(expr) {\n        return expr.expand(vars);\n      }).join('');\n    };\n\n    Template.prototype.toString = function() {\n      return this.prefix + this.expressions.join('');\n    };\n\n    Template.prototype.toJSON = function() {\n      return this.toString();\n    };\n\n    return Template;\n\n  })();\n\n  SimpleExpression = (function() {\n    var definedPairs;\n\n    SimpleExpression.prototype.first = \"\";\n\n    SimpleExpression.prototype.sep = \",\";\n\n    SimpleExpression.prototype.named = false;\n\n    SimpleExpression.prototype.empty = \"\";\n\n    SimpleExpression.prototype.allow = \"U\";\n\n    function SimpleExpression(params) {\n      this.params = params;\n      this.explodeObject = __bind(this.explodeObject, this);\n      this.explodeArray = __bind(this.explodeArray, this);\n      this._expandPair = __bind(this._expandPair, this);\n      this.stringifySingle = __bind(this.stringifySingle, this);\n      this.encode = __bind(this.encode, this);\n      if (this.params == null) {\n        this.params = [];\n      }\n      this.suffix = '';\n    }\n\n    SimpleExpression.prototype.encode = function(string) {\n      /*\n      Encode a string value for the URI\n      */\n\n      return encoders[this.allow](string);\n    };\n\n    SimpleExpression.prototype.stringifySingle = function(param, value) {\n      /*\n      Encode a single value as a string\n      */\n\n      var k, type, v;\n      type = typeof value;\n      if (type === 'string' || type === 'boolean' || type === 'number') {\n        value = value.toString();\n        return this.encode(value.substring(0, param.cut || value.length));\n      } else if (Array.isArray(value)) {\n        if (param.cut) {\n          throw new Error(\"Prefixed Values do not support lists. Check \" + param.name);\n        }\n        return value.map(this.encode).join(',');\n      } else {\n        if (param.cut) {\n          throw new Error(\"Prefixed Values do not support maps. Check \" + param.name);\n        }\n        return ((function() {\n          var _results;\n          _results = [];\n          for (k in value) {\n            v = value[k];\n            _results.push([k, v].map(this.encode).join(','));\n          }\n          return _results;\n        }).call(this)).join(',');\n      }\n    };\n\n    SimpleExpression.prototype.expand = function(vars) {\n      var defined, expanded,\n        _this = this;\n      defined = definedPairs(this.params, vars);\n      expanded = defined.map(function(pair) {\n        return _this._expandPair.apply(_this, pair);\n      }).join(this.sep);\n      if (expanded) {\n        return this.first + expanded + this.suffix;\n      } else {\n        if (this.empty && defined.length) {\n          return this.empty + this.suffix;\n        } else {\n          return this.suffix;\n        }\n      }\n    };\n\n    definedPairs = function(params, vars) {\n      /*\n      Return an array of [key, value] arrays where ``key`` is a parameter name\n      from ``@params`` and ``value`` is the value from vars, when ``value`` is\n      neither undefined nor an empty collection.\n      */\n\n      var _this = this;\n      return params.map(function(p) {\n        return [p, vars[p.name]];\n      }).filter(function(pair) {\n        var k, v, vv;\n        v = pair[1];\n        switch (typeof v) {\n          case \"undefined\":\n            return false;\n          case \"object\":\n            if (Array.isArray(v)) {\n              v.length > 0;\n            }\n            for (k in v) {\n              vv = v[k];\n              if (vv) {\n                return true;\n              }\n            }\n            return false;\n          default:\n            return true;\n        }\n      });\n    };\n\n    SimpleExpression.prototype._expandPair = function(param, value) {\n      /*\n      Return the expanded string form of ``pair``.\n      \n      :param pair: A ``[param, value]`` tuple.\n      */\n\n      var name;\n      name = param.name;\n      if (param.explode) {\n        if (Array.isArray(value)) {\n          return this.explodeArray(param, value);\n        } else if (typeof value === 'string') {\n          return this.stringifySingle(param, value);\n        } else {\n          return this.explodeObject(value);\n        }\n      } else {\n        return this.stringifySingle(param, value);\n      }\n    };\n\n    SimpleExpression.prototype.explodeArray = function(param, array) {\n      return array.map(this.encode).join(this.sep);\n    };\n\n    SimpleExpression.prototype.explodeObject = function(object) {\n      var k, pairs, v, vv, _i, _len;\n      pairs = [];\n      for (k in object) {\n        v = object[k];\n        k = this.encode(k);\n        if (Array.isArray(v)) {\n          for (_i = 0, _len = v.length; _i < _len; _i++) {\n            vv = v[_i];\n            pairs.push([k, this.encode(vv)]);\n          }\n        } else {\n          pairs.push([k, this.encode(v)]);\n        }\n      }\n      return pairs.map(function(pair) {\n        return pair.join('=');\n      }).join(this.sep);\n    };\n\n    SimpleExpression.prototype.toString = function() {\n      var params;\n      params = this.params.map(function(p) {\n        return p.name + p.explode;\n      }).join(',');\n      return \"{\" + this.first + params + \"}\" + this.suffix;\n    };\n\n    SimpleExpression.prototype.toJSON = function() {\n      return this.toString();\n    };\n\n    return SimpleExpression;\n\n  })();\n\n  NamedExpression = (function(_super) {\n    __extends(NamedExpression, _super);\n\n    function NamedExpression() {\n      this.explodeArray = __bind(this.explodeArray, this);\n      this.stringifySingle = __bind(this.stringifySingle, this);\n      _ref = NamedExpression.__super__.constructor.apply(this, arguments);\n      return _ref;\n    }\n\n    /*\n    A NamedExpression uses name=value expansions in most cases\n    */\n\n\n    NamedExpression.prototype.stringifySingle = function(param, value) {\n      value = (value = NamedExpression.__super__.stringifySingle.apply(this, arguments)) ? \"=\" + value : this.empty;\n      return \"\" + param.name + value;\n    };\n\n    NamedExpression.prototype.explodeArray = function(param, array) {\n      var _this = this;\n      return array.map(function(v) {\n        return \"\" + param.name + \"=\" + (_this.encode(v));\n      }).join(this.sep);\n    };\n\n    return NamedExpression;\n\n  })(SimpleExpression);\n\n  ReservedExpression = (function(_super) {\n    __extends(ReservedExpression, _super);\n\n    function ReservedExpression() {\n      _ref1 = ReservedExpression.__super__.constructor.apply(this, arguments);\n      return _ref1;\n    }\n\n    ReservedExpression.prototype.encode = function(string) {\n      return encoders['U+R'](string);\n    };\n\n    ReservedExpression.prototype.toString = function() {\n      return '{+' + (ReservedExpression.__super__.toString.apply(this, arguments)).substring(1);\n    };\n\n    return ReservedExpression;\n\n  })(SimpleExpression);\n\n  FragmentExpression = (function(_super) {\n    __extends(FragmentExpression, _super);\n\n    function FragmentExpression() {\n      _ref2 = FragmentExpression.__super__.constructor.apply(this, arguments);\n      return _ref2;\n    }\n\n    FragmentExpression.prototype.first = '#';\n\n    FragmentExpression.prototype.empty = '#';\n\n    FragmentExpression.prototype.encode = function(string) {\n      return encoders['U+R'](string);\n    };\n\n    return FragmentExpression;\n\n  })(SimpleExpression);\n\n  LabelExpression = (function(_super) {\n    __extends(LabelExpression, _super);\n\n    function LabelExpression() {\n      _ref3 = LabelExpression.__super__.constructor.apply(this, arguments);\n      return _ref3;\n    }\n\n    LabelExpression.prototype.first = '.';\n\n    LabelExpression.prototype.sep = '.';\n\n    LabelExpression.prototype.empty = '.';\n\n    return LabelExpression;\n\n  })(SimpleExpression);\n\n  PathSegmentExpression = (function(_super) {\n    __extends(PathSegmentExpression, _super);\n\n    function PathSegmentExpression() {\n      _ref4 = PathSegmentExpression.__super__.constructor.apply(this, arguments);\n      return _ref4;\n    }\n\n    PathSegmentExpression.prototype.first = '/';\n\n    PathSegmentExpression.prototype.sep = '/';\n\n    return PathSegmentExpression;\n\n  })(SimpleExpression);\n\n  PathParamExpression = (function(_super) {\n    __extends(PathParamExpression, _super);\n\n    function PathParamExpression() {\n      _ref5 = PathParamExpression.__super__.constructor.apply(this, arguments);\n      return _ref5;\n    }\n\n    PathParamExpression.prototype.first = ';';\n\n    PathParamExpression.prototype.sep = ';';\n\n    return PathParamExpression;\n\n  })(NamedExpression);\n\n  FormStartExpression = (function(_super) {\n    __extends(FormStartExpression, _super);\n\n    function FormStartExpression() {\n      _ref6 = FormStartExpression.__super__.constructor.apply(this, arguments);\n      return _ref6;\n    }\n\n    FormStartExpression.prototype.first = '?';\n\n    FormStartExpression.prototype.sep = '&';\n\n    FormStartExpression.prototype.empty = '=';\n\n    return FormStartExpression;\n\n  })(NamedExpression);\n\n  FormContinuationExpression = (function(_super) {\n    __extends(FormContinuationExpression, _super);\n\n    function FormContinuationExpression() {\n      _ref7 = FormContinuationExpression.__super__.constructor.apply(this, arguments);\n      return _ref7;\n    }\n\n    FormContinuationExpression.prototype.first = '&';\n\n    return FormContinuationExpression;\n\n  })(FormStartExpression);\n\n  module.exports = {\n    Template: Template,\n    SimpleExpression: SimpleExpression,\n    NamedExpression: NamedExpression,\n    ReservedExpression: ReservedExpression,\n    FragmentExpression: FragmentExpression,\n    LabelExpression: LabelExpression,\n    PathSegmentExpression: PathSegmentExpression,\n    PathParamExpression: PathParamExpression,\n    FormStartExpression: FormStartExpression,\n    FormContinuationExpression: FormContinuationExpression,\n    expression: function(op, params) {\n      var cls;\n      cls = (function() {\n        switch (op) {\n          case '':\n            return SimpleExpression;\n          case '+':\n            return ReservedExpression;\n          case '#':\n            return FragmentExpression;\n          case '.':\n            return LabelExpression;\n          case '/':\n            return PathSegmentExpression;\n          case ';':\n            return PathParamExpression;\n          case '?':\n            return FormStartExpression;\n          case '&':\n            return FormContinuationExpression;\n        }\n      })();\n      return new cls(params);\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.6.3\n(function() {\n  var pctEncode;\n\n  pctEncode = require('pct-encode');\n\n  exports[\"U\"] = pctEncode(/[^\\w~.-]/g);\n\n  exports[\"U+R\"] = pctEncode(/[^\\w.~:\\/\\?#\\[\\]@!\\$&'()*+,;=%-]|%(?!\\d\\d)/g);\n\n}).call(this);\n","module.exports = function pctEncode(regexp) {\n  regexp = regexp || /\\W/g;\n  return function encode(string) {\n    string = String(string);\n    return string.replace(regexp, function (m) {\n      var c = m[0].charCodeAt(0)\n        , encoded = [];\n      if (c < 128) {\n        encoded.push(c);\n      } else if ((128 <= c && c < 2048)) {\n        encoded.push((c >> 6) | 192);\n        encoded.push((c & 63) | 128);\n      } else {\n        encoded.push((c >> 12) | 224);\n        encoded.push(((c >> 6) & 63) | 128);\n        encoded.push((c & 63) | 128);\n      }\n      return encoded.map(function (c) {\n        return '%' + c.toString(16).toUpperCase();\n      }).join('');\n    })\n  }\n}\n","import Link from '../link';\nimport Representation from './base';\n\n/**\n * The Representation class is basically a 'body' of a request\n * or response.\n *\n * This class is for HTML responses. The html.web.js version is the version\n * intended for browsers. The regular html.js is intended for node.js.\n */\nexport default class Html extends Representation {\n\n  constructor(uri: string, contentType: string, body: string) {\n\n    super(uri, contentType, body);\n\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(body, 'text/html');\n\n    linkFromTags(\n      this,\n      doc.getElementsByTagName('link')\n    );\n\n    linkFromTags(\n      this,\n      doc.getElementsByTagName('a')\n    );\n\n  }\n\n}\n\nfunction linkFromTags(htmlDoc: Html, elements: HTMLCollectionOf<HTMLElement>) {\n\n  for (const node of elements) {\n\n    const rels = node.getAttribute('rel');\n    const href = node.getAttribute('href');\n    const type = node.getAttribute('type') || undefined;\n\n    if (!rels || !href) {\n      continue;\n    }\n\n    for (const rel of rels.split(' ')) {\n\n      const link = new Link({\n        rel: rel,\n        baseHref: htmlDoc.uri,\n        href: href,\n        type: type\n      });\n      htmlDoc.links.push(link);\n\n    }\n\n  }\n\n}\n","var querystring = require( 'querystring' )\nvar trim = require( './trim' )\n\n/**\n * Link\n * @constructor\n * @return {Link}\n */\nfunction Link( value ) {\n\n  if( !(this instanceof Link) ) {\n    return new Link( value )\n  }\n\n  /** @type {Array} URI references */\n  this.refs = []\n\n}\n\n/**\n * General matching pattern\n * @type {RegExp}\n */\nLink.pattern = /(?:\\<([^\\>]+)\\>)((\\s*;\\s*([a-z\\*]+)=((\"[^\"]+\")|('[^']+')|([^\\,\\;]+)))*)(\\s*,\\s*|$)/gi\n\n/**\n * Attribute matching pattern\n * @type {RegExp}\n */\nLink.attrPattern = /([a-z\\*]+)=(?:(?:\"([^\"]+)\")|(?:'([^']+)')|([^\\,\\;]+))/gi\n\n/**\n * Determines whether an encoding can be\n * natively handled with a `Buffer`\n * @param {String} value\n * @return {Boolean}\n */\nLink.isCompatibleEncoding = function( value ) {\n  return /^utf-?8|ascii|utf-?16-?le|ucs-?2|base-?64|latin-?1$/i.test( value )\n}\n\n/**\n * Format a given extended attribute and it's value\n * @param {String} attr\n * @param {Object} data\n * @return {String}\n */\nLink.formatExtendedAttribute = function( attr, data ) {\n\n  var encoding = ( data.encoding || 'utf-8' ).toUpperCase()\n  var language = data.language || 'en'\n\n  var encodedValue = ''\n\n  if( Buffer.isBuffer( data.value ) && Link.isCompatibleEncoding( encoding ) ) {\n    encodedValue = data.value.toString( encoding )\n  } else if( Buffer.isBuffer( data.value ) ) {\n    encodedValue = data.value.toString( 'hex' )\n      .replace( /[0-9a-f]{2}/gi, '%$1' )\n  } else {\n    encodedValue = querystring.escape( data.value )\n  }\n\n  return attr + '=' + encoding + '\\'' +\n    language + '\\'' + encodedValue\n\n}\n\n/**\n * Format a given attribute and it's value\n * @param {String} attr\n * @param {String|Object} value\n * @return {String}\n */\nLink.formatAttribute = function( attr, value ) {\n\n  // NOTE: Properly test this condition\n  if( /\\*$/.test( attr ) || typeof value !== 'string' )\n    return Link.formatExtendedAttribute( attr, value )\n\n  // Strictly, not all values matching this\n  // selector would need quotes, but it's better to be safe\n  var needsQuotes = /[^a-z]/i.test( value )\n\n  if( needsQuotes ) {\n    // We don't need to escape <SP> <,> <;>\n    value = querystring.escape( value )\n      .replace( /%20/g, ' ' )\n      .replace( /%2C/g, ',' )\n      .replace( /%3B/g, ';' )\n\n    value = '\"' + value + '\"'\n  }\n\n  return attr + '=' + value\n\n}\n\n/**\n * Parses an extended value and attempts to decode it\n * @internal\n * @param {String} value\n * @return {Object}\n */\nLink.parseExtendedValue = function( value ) {\n  var parts = /([^']+)?(?:'([^']+)')?(.+)/.exec( value )\n  return {\n    language: parts[2].toLowerCase(),\n    encoding: Link.isCompatibleEncoding( parts[1] ) ?\n      null : parts[1].toLowerCase(),\n    value: Link.isCompatibleEncoding( parts[1] ) ?\n      querystring.unescape( parts[3] ) : parts[3]\n  }\n}\n\n/**\n * Set an attribute on a link ref\n * @param {Object} link\n * @param {String} attr\n * @param {String} value\n */\nLink.setAttr = function( link, attr, value ) {\n\n  // Occurrences after the first \"rel\" MUST be ignored by parsers\n  // @see RFC 5988, Section 5.3: Relation Type\n  if( attr === 'rel' && link[ attr ] != null )\n    return link\n\n  if( Array.isArray( link[ attr ] ) ) {\n    link[ attr ].push( value )\n  } else if( link[ attr ] != null ) {\n    link[ attr ] = [ link[ attr ], value ]\n  } else {\n    link[ attr ] = value\n  }\n\n  return link\n\n}\n\n/**\n * Parses uri attributes\n */\nLink.parseParams = function( link, uri ) {\n\n  var kvs = {}\n  var params = /(.+)\\?(.+)/gi.exec( uri )\n\n  if( !params ) {\n    return link\n  }\n\n  params = params[2].split('&')\n\n  for( var i = 0; i < params.length; i++ ) {\n    var param = params[i].split('=');\n    kvs[ param[0] ] = param[1]\n  }\n\n  Link.setAttr( link, 'params', kvs )\n\n  return link\n\n}\n\n/**\n * Parses out URI attributes\n * @internal\n * @param {Object} link\n * @param {String} parts\n * @return {Object} link\n */\nLink.parseAttrs = function( link, parts ) {\n\n  var match = null\n  var attr = ''\n  var value = ''\n  var attrs = ''\n\n  var uriAttrs = /<(.*)>;\\s*(.*)/gi.exec( parts )\n  if( uriAttrs ) {\n    attrs = uriAttrs[2]\n    link = Link.parseParams( link, uriAttrs[1] )\n  }\n\n  while( match = Link.attrPattern.exec( attrs ) ) {\n    attr = match[1].toLowerCase()\n    value = match[4] || match[3] || match[2]\n    if( /\\*$/.test( attr ) ) {\n      Link.setAttr( link, attr, Link.parseExtendedValue( value ) )\n    } else if( /%/.test( value ) ) {\n      Link.setAttr( link, attr, querystring.unescape( value ) )\n    } else {\n      Link.setAttr( link, attr, value )\n    }\n  }\n\n  return link\n\n}\n\nLink.parse = function( value ) {\n  return new Link().parse( value )\n}\n\n/**\n * Link prototype\n * @type {Object}\n */\nLink.prototype = {\n\n  constructor: Link,\n\n  /**\n   * Get refs with given relation type\n   * @param {String} value\n   * @return {Array<Object>}\n   */\n  rel: function( value ) {\n\n    var links = []\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ].rel === value ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  },\n\n  /**\n   * Get refs where given attribute has a given value\n   * @param {String} attr\n   * @param {String} value\n   * @return {Array<Object>}\n   */\n  get: function( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    var links = []\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  },\n\n  set: function( link ) {\n    this.refs.push( link )\n    return this\n  },\n\n  has: function( attr, value ) {\n    return this.get( attr, value ) != null\n  },\n\n  parse: function( value ) {\n\n    // Unfold folded lines\n    value = trim( value )\n      .replace( /\\r?\\n[\\x20\\x09]+/g, '' )\n\n    var match = null\n\n    while( match = Link.pattern.exec( value ) ) {\n      var link = Link.parseAttrs({ uri: match[1] }, match[0] )\n      this.refs.push( link )\n    }\n\n    return this\n\n  },\n\n  toString: function() {\n\n    var refs = []\n    var link = ''\n    var ref = null\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      ref = this.refs[i]\n      link = Object.keys( this.refs[i] ).reduce( function( link, attr ) {\n        if( attr === 'uri' ) return link\n        return link + '; ' + Link.formatAttribute( attr, ref[ attr ] )\n      }, '<' + ref.uri + '>' )\n      refs.push( link )\n    }\n\n    return refs.join( ', ' )\n\n  },\n\n}\n\n// Exports\nmodule.exports = Link\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","module.exports = function trim( value ) {\n  return value.replace( /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '' )\n}\n","import Resource from './resource';\n\ntype Executor =\n  (\n    res: ((value: FollowablePromise) => void),\n    rej: ((reason: any) => any)\n  )\n  => void;\n\n/**\n * The FollowablePromise is a Promise that adds the follow and followAll\n * functions.\n *\n * It's really just a thin wrapper around the promise. Note that we're not\n * extending the built-in Promise object, but proxy it as browsers don't allow\n * extending the Promise object.\n */\nexport default class FollowablePromise {\n\n  realPromise: Promise<Resource>;\n\n  constructor(executor: Executor ) {\n    this.realPromise = new Promise(executor);\n  }\n\n  /**\n   * The then function maps to a standard then function, as it appears on the\n   * promise.\n   */\n  then(onResolve: (result: any) => Resource | Promise<Resource>, onReject?: (reason: any) => never): Promise<Resource> {\n    return this.realPromise.then(onResolve, onReject);\n  }\n\n  /**\n   * The catch function maps to a standard then function, as it appears on the\n   * promise.\n   */\n  catch<T>(onReject: (reason: any) => Promise<T> | T): Promise<Resource | T> {\n    return this.realPromise.catch(onReject);\n  }\n\n  /**\n   * The follow function will wait for this promise to resolve, assume the\n   * resolved value is a Ketting resource and then call 'follow' on it.\n   *\n   * The function returns a Promise that will resolve into the result of that\n   * 'follow' function.\n   *\n   * In practice this means you can chain multiple 'follow' calls.\n   */\n  follow(rel: string, variables?: object): FollowablePromise {\n\n    return new FollowablePromise((resolve: (value: FollowablePromise) => void, reject: (reason: any) => void) => {\n\n      this.realPromise.then((resource: Resource) => {\n        resolve(resource.follow(rel, variables));\n\n      }).catch(err => {\n        reject(err);\n      });\n\n    });\n\n  }\n\n  /**\n   * The followAll function will wait for this promise to resolve, assume the\n   * resolved value is a Ketting resource and then call 'followAll' on it.\n   *\n   * The function returns a Promise that will resolve into the result of that\n   * 'followAll' function.\n   *\n   * In practice this means you can end a chain of 'follow' calls in the\n   * 'followAll' call.\n   *\n   * It's really the same idea as the follow function, except that you can't\n   * keep on chaining after the followAll, because it resolves in an array of\n   * resources.\n   */\n  followAll(rel: string): Promise<Resource[]> {\n    return this.realPromise.then((resource: Resource) => {\n      return resource.followAll(rel);\n    });\n  }\n\n}\n","/**\n * HttpError extends the Error object, and is thrown wheenever servers emit\n * HTTP errors.\n *\n * It has a response property, allowing users to find out more about the\n * nature of the error.\n *\n * @constructor\n * @param {Response} response\n */\nexport class HttpError extends Error {\n\n  response: Response;\n  status: number;\n\n  constructor(response: Response) {\n    super('HTTP error ' + response.status);\n    this.response = response;\n    this.status = response.status;\n  }\n\n}\n\n/**\n * Problem extends the HttpError object. If a server emits a HTTP error, and\n * the response body's content-type is application/problem+json.\n *\n * application/problem+json is defined in RFC7807 and provides a standardized\n * way to describe error conditions by a HTTP server.\n *\n * @constructor\n * @param {Response} response\n * @param {object} problemBody\n */\nexport class Problem extends HttpError {\n\n  body: {\n    title?: string\n  };\n\n  constructor(response: Response, problemBody: object) {\n    super(response);\n    this.body = problemBody;\n    if (this.body.title) {\n      this.message = 'HTTP Error ' + this.status + ': ' + this.body.title;\n    }\n  }\n\n}\n\n/**\n * This function creates problems, not unlike the the author of this file.\n *\n * It takes a Fetch Response object, and returns a HttpError. If the HTTP\n * response has a type of application/problem+json it will return a Problem\n * object.\n *\n * Because parsing the response might be asynchronous, the function returns\n * a Promise resolving in either object.\n */\nexport default async function problemFactory(response: Response): Promise<HttpError | Problem> {\n\n  const contentType = response.headers.get('Content-Type');\n  if (contentType && contentType.match(/^application\\/problem\\+json/i)) {\n    const problemBody = await response.json();\n    return new Problem(response, problemBody);\n  } else {\n    return new HttpError(response);\n  }\n\n}\n\n","/**\n * Encoding a string to base64 in a browser.\n */\nexport function encode(input: string): string {\n\n  return btoa(input);\n\n}\n","import ClientOAuth2 from 'client-oauth2';\nimport { Token } from 'client-oauth2';\nimport './fetch-polyfill';\n\nexport type OAuth2Init = {\n  client: {\n    clientId: string,\n    clientSecret: string,\n    accessTokenUri: string,\n    scopes: string[]\n  },\n  owner?: {\n    userName: string,\n    password: string\n  }\n};\n\nexport class OAuth2Helper {\n\n  client: ClientOAuth2;\n  token: null | Token;\n  owner: {\n    userName: string,\n    password: string\n  };\n\n  constructor(options: OAuth2Init) {\n\n    this.client = new ClientOAuth2(options.client);\n    this.token = null;\n    this.owner = options.owner;\n\n  }\n\n  /**\n   * Does a HTTP request with OAuth2 enabled.\n   *\n   * This function will automatically grab an access token if it didn't have\n   * one, and attempt to refresh the token if it was expired.\n   */\n  async fetch(request: Request): Promise<Response> {\n\n    const token = await this.getToken();\n    request.headers.set('Authorization', 'Bearer ' + token.accessToken);\n\n    const response = await fetch(request);\n\n    if (response.status !== 401) {\n      return response;\n    }\n\n    // If we receive 401, refresh token and try again once\n    await this.refreshToken();\n    request.headers.set('Authorization', 'Bearer ' + this.token.accessToken);\n\n    return fetch(request);\n\n  }\n\n  /**\n   * Retrieves an access token and refresh token.\n   */\n  async getToken(): Promise<Token> {\n\n    if (!this.token) {\n      return this.refreshToken();\n    }\n    return this.token;\n\n  }\n\n  /**\n   * Obtains a new access token\n   */\n  async refreshToken(): Promise<Token> {\n\n    if (this.token && this.token.refreshToken) {\n      // If we had a refresh token, use that\n      this.token = await this.token.refresh();\n      return this.token;\n    }\n\n    if (this.owner) {\n      // If we use the 'password' grant_type, get a token that way.\n      this.token = await this.client.owner.getToken(\n        this.owner.userName,\n        this.owner.password\n      );\n      return this.token;\n    }\n\n    // Use client_credentials\n    this.token = await this.client.credentials.getToken();\n    return this.token;\n\n  }\n\n}\n","var Buffer = require('safe-buffer').Buffer\nvar Querystring = require('querystring')\nvar Url = require('url')\nvar defaultRequest = require('./request')\n\nvar btoa = typeof Buffer === 'function' ? btoaBuffer : window.btoa\n\n/**\n * Export `ClientOAuth2` class.\n */\nmodule.exports = ClientOAuth2\n\n/**\n * Default headers for executing OAuth 2.0 flows.\n */\nvar DEFAULT_HEADERS = {\n  'Accept': 'application/json, application/x-www-form-urlencoded',\n  'Content-Type': 'application/x-www-form-urlencoded'\n}\n\n/**\n * Format error response types to regular strings for displaying to clients.\n *\n * Reference: http://tools.ietf.org/html/rfc6749#section-4.1.2.1\n */\nvar ERROR_RESPONSES = {\n  'invalid_request': [\n    'The request is missing a required parameter, includes an',\n    'invalid parameter value, includes a parameter more than',\n    'once, or is otherwise malformed.'\n  ].join(' '),\n  'invalid_client': [\n    'Client authentication failed (e.g., unknown client, no',\n    'client authentication included, or unsupported',\n    'authentication method).'\n  ].join(' '),\n  'invalid_grant': [\n    'The provided authorization grant (e.g., authorization',\n    'code, resource owner credentials) or refresh token is',\n    'invalid, expired, revoked, does not match the redirection',\n    'URI used in the authorization request, or was issued to',\n    'another client.'\n  ].join(' '),\n  'unauthorized_client': [\n    'The client is not authorized to request an authorization',\n    'code using this method.'\n  ].join(' '),\n  'unsupported_grant_type': [\n    'The authorization grant type is not supported by the',\n    'authorization server.'\n  ].join(' '),\n  'access_denied': [\n    'The resource owner or authorization server denied the request.'\n  ].join(' '),\n  'unsupported_response_type': [\n    'The authorization server does not support obtaining',\n    'an authorization code using this method.'\n  ].join(' '),\n  'invalid_scope': [\n    'The requested scope is invalid, unknown, or malformed.'\n  ].join(' '),\n  'server_error': [\n    'The authorization server encountered an unexpected',\n    'condition that prevented it from fulfilling the request.',\n    '(This error code is needed because a 500 Internal Server',\n    'Error HTTP status code cannot be returned to the client',\n    'via an HTTP redirect.)'\n  ].join(' '),\n  'temporarily_unavailable': [\n    'The authorization server is currently unable to handle',\n    'the request due to a temporary overloading or maintenance',\n    'of the server.'\n  ].join(' ')\n}\n\n/**\n * Support base64 in node like how it works in the browser.\n *\n * @param  {string} string\n * @return {string}\n */\nfunction btoaBuffer (string) {\n  return new Buffer(string).toString('base64')\n}\n\n/**\n * Check if properties exist on an object and throw when they aren't.\n *\n * @throws {TypeError} If an expected property is missing.\n *\n * @param {Object}    obj\n * @param {...string} props\n */\nfunction expects (obj) {\n  for (var i = 1; i < arguments.length; i++) {\n    var prop = arguments[i]\n\n    if (obj[prop] == null) {\n      throw new TypeError('Expected \"' + prop + '\" to exist')\n    }\n  }\n}\n\n/**\n * Pull an authentication error from the response data.\n *\n * @param  {Object} data\n * @return {string}\n */\nfunction getAuthError (body) {\n  var message = ERROR_RESPONSES[body.error] ||\n    body.error_description ||\n    body.error\n\n  if (message) {\n    var err = new Error(message)\n    err.body = body\n    err.code = 'EAUTH'\n    return err\n  }\n}\n\n/**\n * Attempt to parse response body as JSON, fall back to parsing as a query string.\n *\n * @param {string} body\n * @return {Object}\n */\nfunction parseResponseBody (body) {\n  try {\n    return JSON.parse(body)\n  } catch (e) {\n    return Querystring.parse(body)\n  }\n}\n\n/**\n * Sanitize the scopes option to be a string.\n *\n * @param  {Array}  scopes\n * @return {string}\n */\nfunction sanitizeScope (scopes) {\n  return Array.isArray(scopes) ? scopes.join(' ') : toString(scopes)\n}\n\n/**\n * Create a request uri based on an options object and token type.\n *\n * @param  {Object} options\n * @param  {string} tokenType\n * @return {string}\n */\nfunction createUri (options, tokenType) {\n  // Check the required parameters are set.\n  expects(options, 'clientId', 'authorizationUri')\n\n  return options.authorizationUri + '?' + Querystring.stringify(Object.assign({\n    client_id: options.clientId,\n    redirect_uri: options.redirectUri,\n    scope: sanitizeScope(options.scopes),\n    response_type: tokenType,\n    state: options.state\n  }, options.query))\n}\n\n/**\n * Create basic auth header.\n *\n * @param  {string} username\n * @param  {string} password\n * @return {string}\n */\nfunction auth (username, password) {\n  return 'Basic ' + btoa(toString(username) + ':' + toString(password))\n}\n\n/**\n * Ensure a value is a string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction toString (str) {\n  return str == null ? '' : String(str)\n}\n\n/**\n * Merge request options from an options object.\n */\nfunction requestOptions (requestOptions, options) {\n  return {\n    url: requestOptions.url,\n    method: requestOptions.method,\n    body: Object.assign({}, requestOptions.body, options.body),\n    query: Object.assign({}, requestOptions.query, options.query),\n    headers: Object.assign({}, requestOptions.headers, options.headers)\n  }\n}\n\n/**\n * Construct an object that can handle the multiple OAuth 2.0 flows.\n *\n * @param {Object} options\n */\nfunction ClientOAuth2 (options, request) {\n  this.options = options\n  this.request = request || defaultRequest\n\n  this.code = new CodeFlow(this)\n  this.token = new TokenFlow(this)\n  this.owner = new OwnerFlow(this)\n  this.credentials = new CredentialsFlow(this)\n  this.jwt = new JwtBearerFlow(this)\n}\n\n/**\n * Alias the token constructor.\n *\n * @type {Function}\n */\nClientOAuth2.Token = ClientOAuth2Token\n\n/**\n * Create a new token from existing data.\n *\n * @param  {string} access\n * @param  {string} [refresh]\n * @param  {string} [type]\n * @param  {Object} [data]\n * @return {Object}\n */\nClientOAuth2.prototype.createToken = function (access, refresh, type, data) {\n  var options = Object.assign(\n    {},\n    data,\n    typeof access === 'string' ? { access_token: access } : access,\n    typeof refresh === 'string' ? { refresh_token: refresh } : refresh,\n    typeof type === 'string' ? { token_type: type } : type\n  )\n\n  return new ClientOAuth2.Token(this, options)\n}\n\n/**\n * Using the built-in request method, we'll automatically attempt to parse\n * the response.\n *\n * @param  {Object}  options\n * @return {Promise}\n */\nClientOAuth2.prototype._request = function (options) {\n  var url = options.url\n  var body = Querystring.stringify(options.body)\n  var query = Querystring.stringify(options.query)\n\n  if (query) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + query\n  }\n\n  return this.request(options.method, url, body, options.headers)\n    .then(function (res) {\n      var body = parseResponseBody(res.body)\n      var authErr = getAuthError(body)\n\n      if (authErr) {\n        return Promise.reject(authErr)\n      }\n\n      if (res.status < 200 || res.status >= 399) {\n        var statusErr = new Error('HTTP status ' + res.status)\n        statusErr.status = res.status\n        statusErr.body = res.body\n        statusErr.code = 'ESTATUS'\n        return Promise.reject(statusErr)\n      }\n\n      return body\n    })\n}\n\n/**\n * General purpose client token generator.\n *\n * @param {Object} client\n * @param {Object} data\n */\nfunction ClientOAuth2Token (client, data) {\n  this.client = client\n  this.data = data\n  this.tokenType = data.token_type && data.token_type.toLowerCase()\n  this.accessToken = data.access_token\n  this.refreshToken = data.refresh_token\n\n  this.expiresIn(Number(data.expires_in))\n}\n\n/**\n * Expire the token after some time.\n *\n * @param  {number|Date} duration Seconds from now to expire, or a date to expire on.\n * @return {Date}\n */\nClientOAuth2Token.prototype.expiresIn = function (duration) {\n  if (typeof duration === 'number') {\n    this.expires = new Date()\n    this.expires.setSeconds(this.expires.getSeconds() + duration)\n  } else if (duration instanceof Date) {\n    this.expires = new Date(duration.getTime())\n  } else {\n    throw new TypeError('Unknown duration: ' + duration)\n  }\n\n  return this.expires\n}\n\n/**\n * Sign a standardised request object with user authentication information.\n *\n * @param  {Object} requestObject\n * @return {Object}\n */\nClientOAuth2Token.prototype.sign = function (requestObject) {\n  if (!this.accessToken) {\n    throw new Error('Unable to sign without access token')\n  }\n\n  requestObject.headers = requestObject.headers || {}\n\n  if (this.tokenType === 'bearer') {\n    requestObject.headers.Authorization = 'Bearer ' + this.accessToken\n  } else {\n    var parts = requestObject.url.split('#')\n    var token = 'access_token=' + this.accessToken\n    var url = parts[0].replace(/[?&]access_token=[^&#]/, '')\n    var fragment = parts[1] ? '#' + parts[1] : ''\n\n    // Prepend the correct query string parameter to the url.\n    requestObject.url = url + (url.indexOf('?') > -1 ? '&' : '?') + token + fragment\n\n    // Attempt to avoid storing the url in proxies, since the access token\n    // is exposed in the query parameters.\n    requestObject.headers.Pragma = 'no-store'\n    requestObject.headers['Cache-Control'] = 'no-store'\n  }\n\n  return requestObject\n}\n\n/**\n * Refresh a user access token with the supplied token.\n *\n * @param  {Object}  opts\n * @return {Promise}\n */\nClientOAuth2Token.prototype.refresh = function (opts) {\n  var self = this\n  var options = Object.assign({}, this.client.options, opts)\n\n  if (!this.refreshToken) {\n    return Promise.reject(new Error('No refresh token'))\n  }\n\n  return this.client._request(requestOptions({\n    url: options.accessTokenUri,\n    method: 'POST',\n    headers: Object.assign({}, DEFAULT_HEADERS, {\n      Authorization: auth(options.clientId, options.clientSecret)\n    }),\n    body: {\n      refresh_token: this.refreshToken,\n      grant_type: 'refresh_token'\n    }\n  }, options))\n    .then(function (data) {\n      return self.client.createToken(Object.assign({}, self.data, data))\n    })\n}\n\n/**\n * Check whether the token has expired.\n *\n * @return {boolean}\n */\nClientOAuth2Token.prototype.expired = function () {\n  return Date.now() > this.expires.getTime()\n}\n\n/**\n * Support resource owner password credentials OAuth 2.0 grant.\n *\n * Reference: http://tools.ietf.org/html/rfc6749#section-4.3\n *\n * @param {ClientOAuth2} client\n */\nfunction OwnerFlow (client) {\n  this.client = client\n}\n\n/**\n * Make a request on behalf of the user credentials to get an access token.\n *\n * @param  {string}  username\n * @param  {string}  password\n * @param  {Object}  [opts]\n * @return {Promise}\n */\nOwnerFlow.prototype.getToken = function (username, password, opts) {\n  var self = this\n  var options = Object.assign({}, this.client.options, opts)\n\n  return this.client._request(requestOptions({\n    url: options.accessTokenUri,\n    method: 'POST',\n    headers: Object.assign({}, DEFAULT_HEADERS, {\n      Authorization: auth(options.clientId, options.clientSecret)\n    }),\n    body: {\n      scope: sanitizeScope(options.scopes),\n      username: username,\n      password: password,\n      grant_type: 'password'\n    }\n  }, options))\n    .then(function (data) {\n      return self.client.createToken(data)\n    })\n}\n\n/**\n * Support implicit OAuth 2.0 grant.\n *\n * Reference: http://tools.ietf.org/html/rfc6749#section-4.2\n *\n * @param {ClientOAuth2} client\n */\nfunction TokenFlow (client) {\n  this.client = client\n}\n\n/**\n * Get the uri to redirect the user to for implicit authentication.\n *\n * @param  {Object} [opts]\n * @return {string}\n */\nTokenFlow.prototype.getUri = function (opts) {\n  var options = Object.assign({}, this.client.options, opts)\n\n  return createUri(options, 'token')\n}\n\n/**\n * Get the user access token from the uri.\n *\n * @param  {string|Object} uri\n * @param  {Object}        [opts]\n * @return {Promise}\n */\nTokenFlow.prototype.getToken = function (uri, opts) {\n  var options = Object.assign({}, this.client.options, opts)\n  var url = typeof uri === 'object' ? uri : Url.parse(uri, true)\n  var expectedUrl = Url.parse(options.redirectUri)\n\n  if (typeof url.pathname === 'string' && url.pathname !== expectedUrl.pathname) {\n    return Promise.reject(\n      new TypeError('Redirected path should match configured path, but got: ' + url.pathname)\n    )\n  }\n\n  // If no query string or fragment exists, we won't be able to parse\n  // any useful information from the uri.\n  if (!url.hash && !url.search) {\n    return Promise.reject(new TypeError('Unable to process uri: ' + uri))\n  }\n\n  // Extract data from both the fragment and query string. The fragment is most\n  // important, but the query string is also used because some OAuth 2.0\n  // implementations (Instagram) have a bug where state is passed via query.\n  var data = Object.assign(\n    {},\n    typeof url.query === 'string' ? Querystring.parse(url.query) : (url.query || {}),\n    typeof url.hash === 'string' ? Querystring.parse(url.hash.substr(1)) : (url.hash || {})\n  )\n\n  var err = getAuthError(data)\n\n  // Check if the query string was populated with a known error.\n  if (err) {\n    return Promise.reject(err)\n  }\n\n  // Check whether the state matches.\n  if (options.state != null && data.state !== options.state) {\n    return Promise.reject(new TypeError('Invalid state: ' + data.state))\n  }\n\n  // Initalize a new token and return.\n  return Promise.resolve(this.client.createToken(data))\n}\n\n/**\n * Support client credentials OAuth 2.0 grant.\n *\n * Reference: http://tools.ietf.org/html/rfc6749#section-4.4\n *\n * @param {ClientOAuth2} client\n */\nfunction CredentialsFlow (client) {\n  this.client = client\n}\n\n/**\n * Request an access token using the client credentials.\n *\n * @param  {Object}  [opts]\n * @return {Promise}\n */\nCredentialsFlow.prototype.getToken = function (opts) {\n  var self = this\n  var options = Object.assign({}, this.client.options, opts)\n\n  expects(options, 'clientId', 'clientSecret', 'accessTokenUri')\n\n  return this.client._request(requestOptions({\n    url: options.accessTokenUri,\n    method: 'POST',\n    headers: Object.assign({}, DEFAULT_HEADERS, {\n      Authorization: auth(options.clientId, options.clientSecret)\n    }),\n    body: {\n      scope: sanitizeScope(options.scopes),\n      grant_type: 'client_credentials'\n    }\n  }, options))\n    .then(function (data) {\n      return self.client.createToken(data)\n    })\n}\n\n/**\n * Support authorization code OAuth 2.0 grant.\n *\n * Reference: http://tools.ietf.org/html/rfc6749#section-4.1\n *\n * @param {ClientOAuth2} client\n */\nfunction CodeFlow (client) {\n  this.client = client\n}\n\n/**\n * Generate the uri for doing the first redirect.\n *\n * @param  {Object} [opts]\n * @return {string}\n */\nCodeFlow.prototype.getUri = function (opts) {\n  var options = Object.assign({}, this.client.options, opts)\n\n  return createUri(options, 'code')\n}\n\n/**\n * Get the code token from the redirected uri and make another request for\n * the user access token.\n *\n * @param  {string|Object} uri\n * @param  {Object}        [opts]\n * @return {Promise}\n */\nCodeFlow.prototype.getToken = function (uri, opts) {\n  var self = this\n  var options = Object.assign({}, this.client.options, opts)\n\n  expects(options, 'clientId', 'accessTokenUri')\n\n  var url = typeof uri === 'object' ? uri : Url.parse(uri, true)\n\n  if (\n    typeof options.redirectUri === 'string' &&\n    typeof url.pathname === 'string' &&\n    url.pathname !== Url.parse(options.redirectUri).pathname\n  ) {\n    return Promise.reject(\n      new TypeError('Redirected path should match configured path, but got: ' + url.pathname)\n    )\n  }\n\n  if (!url.query) {\n    return Promise.reject(new TypeError('Unable to process uri: ' + uri))\n  }\n\n  var data = typeof url.query === 'string' ? Querystring.parse(url.query) : (url.query || {})\n  var err = getAuthError(data)\n\n  if (err) {\n    return Promise.reject(err)\n  }\n\n  if (options.state != null && data.state !== options.state) {\n    return Promise.reject(new TypeError('Invalid state: ' + data.state))\n  }\n\n  // Check whether the response code is set.\n  if (!data.code) {\n    return Promise.reject(new TypeError('Missing code, unable to request token'))\n  }\n\n  var headers = Object.assign({}, DEFAULT_HEADERS)\n  var body = { code: data.code, grant_type: 'authorization_code', redirect_uri: options.redirectUri }\n\n  // `client_id`: REQUIRED, if the client is not authenticating with the\n  // authorization server as described in Section 3.2.1.\n  // Reference: https://tools.ietf.org/html/rfc6749#section-3.2.1\n  if (options.clientSecret) {\n    headers.Authorization = auth(options.clientId, options.clientSecret)\n  } else {\n    body.client_id = options.clientId\n  }\n\n  return this.client._request(requestOptions({\n    url: options.accessTokenUri,\n    method: 'POST',\n    headers: headers,\n    body: body\n  }, options))\n    .then(function (data) {\n      return self.client.createToken(data)\n    })\n}\n\n/**\n * Support JSON Web Token (JWT) Bearer Token OAuth 2.0 grant.\n *\n * Reference: https://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-12#section-2.1\n *\n * @param {ClientOAuth2} client\n */\nfunction JwtBearerFlow (client) {\n  this.client = client\n}\n\n/**\n * Request an access token using a JWT token.\n *\n * @param  {string} token     A JWT token.\n * @param  {Object} [opts]\n * @return {Promise}\n */\nJwtBearerFlow.prototype.getToken = function (token, opts) {\n  var self = this\n  var options = Object.assign({}, this.client.options, opts)\n  var headers = Object.assign({}, DEFAULT_HEADERS)\n\n  expects(options, 'accessTokenUri')\n\n  // Authentication of the client is optional, as described in\n  // Section 3.2.1 of OAuth 2.0 [RFC6749]\n  if (options.clientId) {\n    headers['Authorization'] = auth(options.clientId, options.clientSecret)\n  }\n\n  return this.client._request(requestOptions({\n    url: options.accessTokenUri,\n    method: 'POST',\n    headers: headers,\n    body: {\n      scope: sanitizeScope(options.scopes),\n      grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n      assertion: token\n    }\n  }, options))\n    .then(function (data) {\n      return self.client.createToken(data)\n    })\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","/**\n * Make a request using `XMLHttpRequest`.\n *\n * @param   {string}  method\n * @param   {string}  url\n * @param   {string}  body\n * @param   {Object}  headers\n * @returns {Promise}\n */\nmodule.exports = function request (method, url, body, headers) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new window.XMLHttpRequest()\n\n    xhr.open(method, url)\n\n    xhr.onload = function () {\n      return resolve({\n        status: xhr.status,\n        body: xhr.responseText\n      })\n    }\n\n    xhr.onerror = xhr.onabort = function () {\n      return reject(new Error(xhr.statusText || 'XHR aborted: ' + url))\n    }\n\n    Object.keys(headers).forEach(function (header) {\n      xhr.setRequestHeader(header, headers[header])\n    })\n\n    xhr.send(body)\n  })\n}\n"],"sourceRoot":""}